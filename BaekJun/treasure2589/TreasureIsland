from collections import deque
# n, m 값
n, m = map(int, input().split())

#WL 입력값들 list
maze = []
for _ in range(n):
    maze.append(list(map(str, input())))


def bfs(lx,ly) :
    #상하좌우를 봅시다
    dx = [-1, 1, 0, 0]
    dy = [0, 0, -1, 1]

    # 방문기록
    visited = []
    visited = [[False] * m for _ in range(n)]

    queue = deque()
    queue.append((lx,ly)) #시작위치
    visited[lx][ly] = 1
    cnt = 0

    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if 0 <= nx < n and 0 <= ny < m and visited[nx][ny] == 0 and maze[nx][ny] == 'L':
                visited[nx][ny] = visited[x][y] + 1
                cnt = max(cnt, visited[nx][ny])
                queue.append((nx,ny))

    return cnt-1

maxCnt = 0

for i in range(n):
    for j in range(m):
        if maze[i][j] == 'L':
            maxCnt = max(maxCnt, bfs(i, j))

print(maxCnt)

